1. What is responsible for defining the routes of the games resource?

The create_router.js file and more specifically, the createRouter function
is responsible for defining the routes for the games resource. This is
a helper function with the sole purpose of creating routes.

2. What do you notice about the folder structure?
Whats the client responsible for? Whats the server responsible for?

The folders are split into client-side and server-side. The server-side
is responsible for creating the routes, creating the database and feeding the
database information. The client-side is responsible for the display and UI
of the application. This is where our Javascript meets HTML and CSS to
create the look, feel and functionality of the app.

3. What are the the responsibilities of server.js?

Server.js has the responsibility of connecting to the MongoDB database
and defining which collections will have routes. It is also responsible for
requiring cors and body-parser to allow for multiple ports and JSON to be used.
It also keeps the port running and listening for any updates to files.

4. What are the responsibilities of the gamesRouter?

The gamesRouter envokes the function createRouter which creates all the
necessary routes for the collection: gamesCollection. These routes are then
used in the app to navigate the different views.

5. What process does the the client (front-end)
use to communicate with the server?

The client-side uses fetch requests to the Local Host web address to
communicate with the server. This is through Get, Post, Delete and Put requests.

6. What optional second argument does the fetch method take?
And what is it used for in this application?
Hint: See Using Fetch on the MDN docs

The optional argument is called init options. This allows to specify the
type of request and any headers, etc associated with this. In this application,
the init options are specify the method, body and headers for the fetch request.

7. Which of the games API routes does the front-end application consume
(i.e. make requests to)?

The front-end application makes requests to the '/' route and the '/:id' route.

8. What are we using the MongoDB Driver for?

It allows us to connect directly to the database when starting the
application. 
